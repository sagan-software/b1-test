{"version":3,"sources":["components/Link.tsx","chainPresets.ts","components/ErrorPage.tsx","components/PageBody.tsx","components/PageWrapper.tsx","components/ChainHeader.tsx","components/PageHeader.tsx","components/AccountPage.tsx"],"names":["Component","to","children","props","renderLink","React","useMemo","forwardRef","itemProps","ref","getRouteString","innerRef","component","ChainEnv","all","id","name","env","Mainnet","url","URL","logo","Testnet","mainnets","filter","preset","testnets","byHostname","reduce","acc","cur","hostname","getByHostname","message","in","maxWidth","container","justify","spacing","direction","item","pt","variant","align","color","style","fontSize","homeRoute","chainName","avatar","Avatar","src","width","height","Grid","alignItems","Box","pr","Typography","host","crumb","chainPresets","Breadcrumbs","Link","chainRoute","xs","ChainHeader","Ricardian","label","title","body","hash","details","source","escapeHtml","py","toHashId","defaultExpanded","expandIcon","aria-controls","size","AbiAction","action","ricardian_contract","AbiActions","actions","map","key","RicardianClause","clause","RicardianClauses","clauses","Account","account","store","abi","api","data","ricardian_clauses","p","match","location","params","_","dispatch","useEffect"],"mappings":"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","file":"static/js/11.88b98aa4.chunk.js","sourcesContent":["import { Link as MuiLink } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {\r\n  Link as RouterLink,\r\n  LinkProps as RouterLinkProps,\r\n} from 'react-router-dom'\r\nimport { getRouteString, RouteParams } from './Router'\r\n\r\nconst Component: React.FC<{ to: RouteParams }> = ({\r\n  to,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<\r\n        HTMLAnchorElement,\r\n        Omit<RouterLinkProps, 'innerRef' | 'to'>\r\n      >((itemProps, ref) => (\r\n        // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\r\n        // See https://github.com/ReactTraining/react-router/issues/6056\r\n        <RouterLink to={getRouteString(to)} {...itemProps} innerRef={ref} />\r\n      )),\r\n    [to],\r\n  )\r\n\r\n  return (\r\n    <MuiLink component={renderLink} {...props}>\r\n      {children}\r\n    </MuiLink>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import * as api from './api'\r\n\r\nexport interface ChainPreset {\r\n  readonly id: api.ChainId\r\n  readonly name: string\r\n  readonly env: ChainEnv\r\n  readonly url: URL\r\n  readonly logo: string\r\n}\r\n\r\nexport enum ChainEnv {\r\n  Mainnet = 'MAINNET',\r\n  Testnet = 'TESTNET',\r\n}\r\n\r\nexport const eosMainnet: ChainPreset = {\r\n  id: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' as api.ChainId,\r\n  name: 'EOS Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.eosnewyork.io'),\r\n  logo: 'eos.jpg',\r\n}\r\n\r\nexport const telosMainnet: ChainPreset = {\r\n  id: '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11' as api.ChainId,\r\n  name: 'Telos Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.tlos.goodblock.io'),\r\n  logo: 'telos.png',\r\n}\r\n\r\nexport const worbliMainnet: ChainPreset = {\r\n  id: '73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f' as api.ChainId,\r\n  name: 'Worbli Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.worbli.io'),\r\n  logo: 'worbli.jpg',\r\n}\r\n\r\nexport const waxMainnet: ChainPreset = {\r\n  id: '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4' as api.ChainId,\r\n  name: 'WAX Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://wax.greymass.com'),\r\n  logo: 'wax.png',\r\n}\r\n\r\nexport const bosMainnet: ChainPreset = {\r\n  id: 'd5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86' as api.ChainId,\r\n  name: 'BOS Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.bossweden.org'),\r\n  logo: 'bos.png',\r\n}\r\n\r\nexport const meetoneMainnet: ChainPreset = {\r\n  id: 'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422' as api.ChainId,\r\n  name: 'MEET.ONE Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://fullnode.meet.one'),\r\n  logo: 'meetone.png',\r\n}\r\n\r\nexport const jungleTestnet: ChainPreset = {\r\n  id: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473' as api.ChainId,\r\n  name: 'Jungle Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://api.jungle.alohaeos.com'),\r\n  logo: 'jungle.png',\r\n}\r\n\r\nexport const kylinTestnet: ChainPreset = {\r\n  id: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191' as api.ChainId,\r\n  name: 'Kylin Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://kylin.eossweden.org'),\r\n  logo: 'kylin.webp',\r\n}\r\n\r\nexport const telosTestnet: ChainPreset = {\r\n  id: '1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f' as api.ChainId,\r\n  name: 'Telos Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://testnet.eos.miami'),\r\n  logo: 'telos.png',\r\n}\r\n\r\nexport const lynxTestnet: ChainPreset = {\r\n  id: '0fea517bbfb5b51c564b5c59bcf7f02cf934cfff895f59d0d5cd7079c06fd978' as api.ChainId,\r\n  name: 'Lynx Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://lynxtestnet.greymass.com'),\r\n  logo: 'lynx.jpg',\r\n}\r\n\r\nexport const bosTestnet: ChainPreset = {\r\n  id: '33cc2426f1b258ef8c798c34c0360b31732ea27a2d7e35a65797850a86d1ba85' as api.ChainId,\r\n  name: 'BOS Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://bos-test.eospacex.com'),\r\n  logo: 'bos.png',\r\n}\r\n\r\nexport const meetoneTestnet: ChainPreset = {\r\n  id: '7136e3e32a458bb99cf6973ab5055869d25830607b9e78593769e1be52fb6f20' as api.ChainId,\r\n  name: 'MEET.ONE Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://sidechain-test-history.meet.one'),\r\n  logo: 'meetone.png',\r\n}\r\n\r\nexport const all: ChainPreset[] = [\r\n  eosMainnet,\r\n  telosMainnet,\r\n  worbliMainnet,\r\n  waxMainnet,\r\n  bosMainnet,\r\n  meetoneMainnet,\r\n  jungleTestnet,\r\n  kylinTestnet,\r\n  telosTestnet,\r\n  lynxTestnet,\r\n  bosTestnet,\r\n  meetoneTestnet,\r\n]\r\n\r\nexport const mainnets: ChainPreset[] = all.filter(\r\n  (preset) => preset.env === ChainEnv.Mainnet,\r\n)\r\n\r\nexport const testnets: ChainPreset[] = all.filter(\r\n  (preset) => preset.env === ChainEnv.Testnet,\r\n)\r\n\r\nexport interface ChainPresets {\r\n  [key: string]: ChainPreset\r\n}\r\n\r\nexport const byChainId: ChainPresets = all.reduce(\r\n  (acc: ChainPresets, cur: ChainPreset) => {\r\n    acc[cur.id] = cur\r\n    return acc\r\n  },\r\n  {},\r\n)\r\n\r\nexport const byHostname: ChainPresets = all.reduce(\r\n  (acc: ChainPresets, cur: ChainPreset) => {\r\n    acc[cur.url.hostname] = cur\r\n    return acc\r\n  },\r\n  {},\r\n)\r\n\r\nexport function getByChainId(chainId: api.ChainId): ChainPreset | void {\r\n  return byChainId[chainId]\r\n}\r\n\r\nexport function getByHostname(hostname: string): ChainPreset | void {\r\n  return byHostname[hostname]\r\n}\r\n","import { Box, Container, Fade, Grid, Typography } from '@material-ui/core'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport React from 'react'\r\nimport RouterLink from './Link'\r\nimport { homeRoute } from './Router'\r\n\r\nconst Component: React.FC<{ message: string }> = ({ message }) => {\r\n  return (\r\n    <Fade in={true}>\r\n      <Container maxWidth='md'>\r\n        <Grid container={true} justify='center' spacing={4} direction='column'>\r\n          <Grid item={true}>\r\n            <Box pt={6}>\r\n              <Typography variant='h4' align='center' color='error'>\r\n                {message}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item={true}>\r\n            <Typography align='center'>\r\n              <ErrorOutlineIcon style={{ fontSize: 250 }} color='error' />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item={true}>\r\n            <Typography align='center'>\r\n              <RouterLink to={homeRoute()}>Back to the home page</RouterLink>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Component: React.FC = ({ children }) => {\r\n  return (\r\n    <Grid container={true} spacing={2}>\r\n      {children}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Container, Fade } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Component: React.FC = ({ children }) => {\r\n  return (\r\n    <Fade in={true}>\r\n      <Container maxWidth='md'>{children}</Container>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Avatar, Box, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport * as chainPresets from '../chainPresets'\r\n\r\nconst Component: React.FC<{\r\n  url: URL;\r\n  preset: chainPresets.ChainPreset | void;\r\n}> = ({ url, preset }) => {\r\n  const chainName = preset ? preset.name : 'Unknown Chain'\r\n  const avatar = preset ? (\r\n    <Avatar src={`/${preset.logo}`} style={{ width: 60, height: 60 }} />\r\n  ) : (\r\n    <></>\r\n  )\r\n\r\n  return (\r\n    <Grid container={true} justify='center' alignItems='center'>\r\n      <Grid item={true}>\r\n        <Box pr={2}>{avatar}</Box>\r\n      </Grid>\r\n      <Grid item={true}>\r\n        <Typography variant='h5'>{chainName}</Typography>\r\n        <Typography variant='subtitle1' color='textSecondary'>\r\n          {url.host}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Typography } from '@material-ui/core'\r\nimport Box from '@material-ui/core/Box'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport React from 'react'\r\nimport * as chainPresets from '../chainPresets'\r\nimport ChainHeader from './ChainHeader'\r\nimport Link from './Link'\r\nimport { chainRoute, homeRoute } from './Router'\r\n\r\nconst Component: React.FC<{\r\n  url: URL;\r\n  crumb: React.ReactNode;\r\n}> = ({ url, crumb, children }) => {\r\n  const preset = chainPresets.getByHostname(url.host)\r\n  const chainName = preset ? preset.name : 'Unknown Chain'\r\n  return (\r\n    <Grid container={true} spacing={2}>\r\n      <Grid item={true}>\r\n        <Box pt={2}>\r\n          <Breadcrumbs>\r\n            <Link to={homeRoute()}>Home</Link>\r\n            <Link to={chainRoute(url.host)}>{chainName}</Link>\r\n            <Typography>{crumb}</Typography>\r\n          </Breadcrumbs>\r\n        </Box>\r\n      </Grid>\r\n      <Grid\r\n        item={true}\r\n        xs={12}\r\n        container={true}\r\n        justify='space-between'\r\n        alignItems='center'\r\n      >\r\n        <Grid item={true}>\r\n          <ChainHeader url={url} preset={preset} />\r\n        </Grid>\r\n        <Grid item={true}>{children}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import {\r\n  Box,\r\n  Chip,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport React from 'react'\r\nimport Markdown from 'react-markdown'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as api from '../api'\r\nimport * as store from '../store'\r\nimport ErrorPage from './ErrorPage'\r\nimport PageBody from './PageBody'\r\nimport PageHeader from './PageHeader'\r\nimport PageWrapper from './PageWrapper'\r\nimport { toHashId } from './Router'\r\n\r\n// A ricardian contract tied to an action or a ricardian clause\r\nconst Ricardian: React.FC<{\r\n  label: string;\r\n  title: string;\r\n  body?: string | void;\r\n  color: 'primary' | 'secondary';\r\n  hash: string;\r\n}> = ({ label, title, body, color, hash }) => {\r\n  const details = body ? (\r\n    <Typography component='div'>\r\n      <Markdown source={body} escapeHtml={true} />\r\n    </Typography>\r\n  ) : (\r\n    <Box py={2} style={{ width: '100%' }}>\r\n      <Typography variant='body2' align='center' color='textSecondary'>\r\n        No ricardian contract\r\n      </Typography>\r\n    </Box>\r\n  )\r\n  const id = toHashId(title)\r\n  return (\r\n    <ExpansionPanel defaultExpanded={hash === '#' + id} id={id}>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls={`${id}-content`}\r\n        id={`${id}-header`}\r\n      >\r\n        <Box pr={1}>\r\n          <Chip size='small' label={label} color={color} />\r\n        </Box>\r\n        <Typography>{title}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>{details}</ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nconst AbiAction: React.FC<{ action: api.AbiAction; hash: string }> = ({\r\n  action,\r\n  hash,\r\n}) => (\r\n  <Ricardian\r\n    label='Action'\r\n    title={action.name}\r\n    body={action.ricardian_contract}\r\n    color='primary'\r\n    hash={hash}\r\n  />\r\n)\r\n\r\nconst AbiActions: React.FC<{ actions: api.AbiAction[]; hash: string }> = ({\r\n  actions,\r\n  hash,\r\n}) => {\r\n  const children = actions.map((action) => (\r\n    <AbiAction key={action.name} action={action} hash={hash} />\r\n  ))\r\n  return <>{children}</>\r\n}\r\n\r\nconst RicardianClause: React.FC<{\r\n  clause: api.RicardianClause;\r\n  hash: string;\r\n}> = ({ clause, hash }) => (\r\n  <Ricardian\r\n    label='Clause'\r\n    title={clause.id}\r\n    body={clause.body}\r\n    color='secondary'\r\n    hash={hash}\r\n  />\r\n)\r\n\r\nconst RicardianClauses: React.FC<{\r\n  clauses: api.RicardianClause[];\r\n  hash: string;\r\n}> = ({ clauses, hash }) => {\r\n  const children = clauses.map((clause) => (\r\n    <RicardianClause key={clause.id} clause={clause} hash={hash} />\r\n  ))\r\n  return <>{children}</>\r\n}\r\n\r\nconst Account: React.FC<{ hash: string }> = ({ hash }) => {\r\n  const account = store.useSelector(store.getSelectedAccount)\r\n  if (!account || !account.abi) {\r\n    return <>Loading</>\r\n  } else if (api.isOk(account.abi)) {\r\n    const data = account.abi.data\r\n    if (data.abi) {\r\n      return (\r\n        <Grid container={true} item={true} direction='column' xs={12}>\r\n          <AbiActions actions={data.abi.actions} hash={hash} />\r\n          <RicardianClauses clauses={data.abi.ricardian_clauses} hash={hash} />\r\n        </Grid>\r\n      )\r\n    } else {\r\n      return (\r\n        <Grid item={true} xs={12}>\r\n          <Paper>\r\n            <Box p={10}>\r\n              <Typography variant='body2' color='textSecondary' align='center'>\r\n                Not a contract. Basic account information could be placed here.\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    }\r\n  } else {\r\n    return <>Error</>\r\n  }\r\n}\r\n\r\nconst Component: React.FC<\r\n  RouteComponentProps<{ host: string; account: api.AccountName }>\r\n> = ({ match, location }) => {\r\n  let url: URL | void\r\n  try {\r\n    url = new URL(`https://${match.params.host}`)\r\n  } catch (_) {\r\n    // Ignore for now, show error message later\r\n  }\r\n\r\n  const dispatch = store.useDispatch()\r\n  React.useEffect(() => {\r\n    if (url) {\r\n      dispatch(store.createSelectAccount(url, match.params.account))\r\n    }\r\n  }, [dispatch, url, match.params.account])\r\n\r\n  if (!url) {\r\n    return <ErrorPage message={'Invalid Hostname'} />\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <PageHeader url={url} crumb={match.params.account}>\r\n        <Box p={1}>\r\n          <Typography variant='h3' align='right'>\r\n            {match.params.account}\r\n          </Typography>\r\n        </Box>\r\n      </PageHeader>\r\n      <PageBody>\r\n        <Account hash={location.hash} />\r\n      </PageBody>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Component\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Link.tsx","chainPresets.ts","components/ErrorPage.tsx","components/PageBody.tsx","components/PageWrapper.tsx","components/ChainHeader.tsx","components/PageHeader.tsx","components/TransactionsTable.tsx","components/RicardianText.tsx","components/ActionsTable.tsx","../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/PlayArrow.js","components/BlocksTable.tsx","components/ChainPage.tsx"],"names":["Component","to","children","props","renderLink","React","useMemo","forwardRef","itemProps","ref","getRouteString","innerRef","component","ChainEnv","all","id","name","env","Mainnet","url","URL","logo","Testnet","mainnets","filter","preset","testnets","byHostname","reduce","acc","cur","hostname","getByHostname","message","in","maxWidth","container","justify","spacing","direction","item","pt","variant","align","color","style","fontSize","homeRoute","chainName","avatar","Avatar","src","width","height","Grid","alignItems","Box","pr","Typography","host","crumb","chainPresets","Breadcrumbs","Link","chainRoute","xs","ChainHeader","TransactionRow","transaction","api","trx","expiration","status","size","label","noWrap","smDown","xsDown","cpu_usage_us","toLocaleString","net_usage_words","TransactionsTable","rows","transactions","map","key","stickyHeader","md","MarkdownIt","text","data","rendered","Mustache","render","dangerouslySetInnerHTML","__html","RicardianDialog","content","action","useState","open","setOpen","openDialog","useCallback","closeDialog","selected","store","isSelected","account","dispatch","useEffect","abi","i","actions","length","actionAbi","ricardian_contract","RicardianText","Tooltip","title","placement","IconButton","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","Button","ActionRow","authorization","auth","actor","permission","Hidden","TableRow","TableCell","accountRoute","JSON","stringify","ActionsTable","hex_data","Paper","Table","TableHead","TableBody","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","BlockRow","producer","timestamp","block","result","route","blockRoute","num","Skeleton","scope","BlocksTable","blocks","AutoplayButton","isPlaying","icon","endIcon","maxNonBlockRows","tab","state","p","ChainTab","Transactions","chain","l","latestBlocks","budget","concat","slice","getTransactions","Actions","x","y","getActions","Blocks","Contents","setTab","handleChange","event","newTab","Tabs","onChange","Tab","match","params","_","ErrorPage","PageWrapper","PageHeader","PageBody"],"mappings":"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","file":"static/js/9.f02f91e6.chunk.js","sourcesContent":["import { Link as MuiLink } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {\r\n  Link as RouterLink,\r\n  LinkProps as RouterLinkProps,\r\n} from 'react-router-dom'\r\nimport { getRouteString, RouteParams } from './Router'\r\n\r\nconst Component: React.FC<{ to: RouteParams }> = ({\r\n  to,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<\r\n        HTMLAnchorElement,\r\n        Omit<RouterLinkProps, 'innerRef' | 'to'>\r\n      >((itemProps, ref) => (\r\n        // With react-router-dom@^6.0.0 use `ref` instead of `innerRef`\r\n        // See https://github.com/ReactTraining/react-router/issues/6056\r\n        <RouterLink to={getRouteString(to)} {...itemProps} innerRef={ref} />\r\n      )),\r\n    [to],\r\n  )\r\n\r\n  return (\r\n    <MuiLink component={renderLink} {...props}>\r\n      {children}\r\n    </MuiLink>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import * as api from './api'\r\n\r\nexport interface ChainPreset {\r\n  readonly id: api.ChainId\r\n  readonly name: string\r\n  readonly env: ChainEnv\r\n  readonly url: URL\r\n  readonly logo: string\r\n}\r\n\r\nexport enum ChainEnv {\r\n  Mainnet = 'MAINNET',\r\n  Testnet = 'TESTNET',\r\n}\r\n\r\nexport const eosMainnet: ChainPreset = {\r\n  id: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906' as api.ChainId,\r\n  name: 'EOS Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.eosnewyork.io'),\r\n  logo: 'eos.jpg',\r\n}\r\n\r\nexport const telosMainnet: ChainPreset = {\r\n  id: '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11' as api.ChainId,\r\n  name: 'Telos Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.tlos.goodblock.io'),\r\n  logo: 'telos.png',\r\n}\r\n\r\nexport const worbliMainnet: ChainPreset = {\r\n  id: '73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f' as api.ChainId,\r\n  name: 'Worbli Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.worbli.io'),\r\n  logo: 'worbli.jpg',\r\n}\r\n\r\nexport const waxMainnet: ChainPreset = {\r\n  id: '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4' as api.ChainId,\r\n  name: 'WAX Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://wax.greymass.com'),\r\n  logo: 'wax.png',\r\n}\r\n\r\nexport const bosMainnet: ChainPreset = {\r\n  id: 'd5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86' as api.ChainId,\r\n  name: 'BOS Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://api.bossweden.org'),\r\n  logo: 'bos.png',\r\n}\r\n\r\nexport const meetoneMainnet: ChainPreset = {\r\n  id: 'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422' as api.ChainId,\r\n  name: 'MEET.ONE Mainnet',\r\n  env: ChainEnv.Mainnet,\r\n  url: new URL('https://fullnode.meet.one'),\r\n  logo: 'meetone.png',\r\n}\r\n\r\nexport const jungleTestnet: ChainPreset = {\r\n  id: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473' as api.ChainId,\r\n  name: 'Jungle Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://api.jungle.alohaeos.com'),\r\n  logo: 'jungle.png',\r\n}\r\n\r\nexport const kylinTestnet: ChainPreset = {\r\n  id: '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191' as api.ChainId,\r\n  name: 'Kylin Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://kylin.eossweden.org'),\r\n  logo: 'kylin.webp',\r\n}\r\n\r\nexport const telosTestnet: ChainPreset = {\r\n  id: '1eaa0824707c8c16bd25145493bf062aecddfeb56c736f6ba6397f3195f33c9f' as api.ChainId,\r\n  name: 'Telos Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://testnet.eos.miami'),\r\n  logo: 'telos.png',\r\n}\r\n\r\nexport const lynxTestnet: ChainPreset = {\r\n  id: '0fea517bbfb5b51c564b5c59bcf7f02cf934cfff895f59d0d5cd7079c06fd978' as api.ChainId,\r\n  name: 'Lynx Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://lynxtestnet.greymass.com'),\r\n  logo: 'lynx.jpg',\r\n}\r\n\r\nexport const bosTestnet: ChainPreset = {\r\n  id: '33cc2426f1b258ef8c798c34c0360b31732ea27a2d7e35a65797850a86d1ba85' as api.ChainId,\r\n  name: 'BOS Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://bos-test.eospacex.com'),\r\n  logo: 'bos.png',\r\n}\r\n\r\nexport const meetoneTestnet: ChainPreset = {\r\n  id: '7136e3e32a458bb99cf6973ab5055869d25830607b9e78593769e1be52fb6f20' as api.ChainId,\r\n  name: 'MEET.ONE Testnet',\r\n  env: ChainEnv.Testnet,\r\n  url: new URL('https://sidechain-test-history.meet.one'),\r\n  logo: 'meetone.png',\r\n}\r\n\r\nexport const all: ChainPreset[] = [\r\n  eosMainnet,\r\n  telosMainnet,\r\n  worbliMainnet,\r\n  waxMainnet,\r\n  bosMainnet,\r\n  meetoneMainnet,\r\n  jungleTestnet,\r\n  kylinTestnet,\r\n  telosTestnet,\r\n  lynxTestnet,\r\n  bosTestnet,\r\n  meetoneTestnet,\r\n]\r\n\r\nexport const mainnets: ChainPreset[] = all.filter(\r\n  (preset) => preset.env === ChainEnv.Mainnet,\r\n)\r\n\r\nexport const testnets: ChainPreset[] = all.filter(\r\n  (preset) => preset.env === ChainEnv.Testnet,\r\n)\r\n\r\nexport interface ChainPresets {\r\n  [key: string]: ChainPreset\r\n}\r\n\r\nexport const byChainId: ChainPresets = all.reduce(\r\n  (acc: ChainPresets, cur: ChainPreset) => {\r\n    acc[cur.id] = cur\r\n    return acc\r\n  },\r\n  {},\r\n)\r\n\r\nexport const byHostname: ChainPresets = all.reduce(\r\n  (acc: ChainPresets, cur: ChainPreset) => {\r\n    acc[cur.url.hostname] = cur\r\n    return acc\r\n  },\r\n  {},\r\n)\r\n\r\nexport function getByChainId(chainId: api.ChainId): ChainPreset | void {\r\n  return byChainId[chainId]\r\n}\r\n\r\nexport function getByHostname(hostname: string): ChainPreset | void {\r\n  return byHostname[hostname]\r\n}\r\n","import { Box, Container, Fade, Grid, Typography } from '@material-ui/core'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport React from 'react'\r\nimport RouterLink from './Link'\r\nimport { homeRoute } from './Router'\r\n\r\nconst Component: React.FC<{ message: string }> = ({ message }) => {\r\n  return (\r\n    <Fade in={true}>\r\n      <Container maxWidth='md'>\r\n        <Grid container={true} justify='center' spacing={4} direction='column'>\r\n          <Grid item={true}>\r\n            <Box pt={6}>\r\n              <Typography variant='h4' align='center' color='error'>\r\n                {message}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item={true}>\r\n            <Typography align='center'>\r\n              <ErrorOutlineIcon style={{ fontSize: 250 }} color='error' />\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item={true}>\r\n            <Typography align='center'>\r\n              <RouterLink to={homeRoute()}>Back to the home page</RouterLink>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Component: React.FC = ({ children }) => {\r\n  return (\r\n    <Grid container={true} spacing={2}>\r\n      {children}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Container, Fade } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Component: React.FC = ({ children }) => {\r\n  return (\r\n    <Fade in={true}>\r\n      <Container maxWidth='md'>{children}</Container>\r\n    </Fade>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Avatar, Box, Grid, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport * as chainPresets from '../chainPresets'\r\n\r\nconst Component: React.FC<{\r\n  url: URL;\r\n  preset: chainPresets.ChainPreset | void;\r\n}> = ({ url, preset }) => {\r\n  const chainName = preset ? preset.name : 'Unknown Chain'\r\n  const avatar = preset ? (\r\n    <Avatar src={`/${preset.logo}`} style={{ width: 60, height: 60 }} />\r\n  ) : (\r\n    <></>\r\n  )\r\n\r\n  return (\r\n    <Grid container={true} justify='center' alignItems='center'>\r\n      <Grid item={true}>\r\n        <Box pr={2}>{avatar}</Box>\r\n      </Grid>\r\n      <Grid item={true}>\r\n        <Typography variant='h5'>{chainName}</Typography>\r\n        <Typography variant='subtitle1' color='textSecondary'>\r\n          {url.host}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import { Typography } from '@material-ui/core'\r\nimport Box from '@material-ui/core/Box'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport React from 'react'\r\nimport * as chainPresets from '../chainPresets'\r\nimport ChainHeader from './ChainHeader'\r\nimport Link from './Link'\r\nimport { chainRoute, homeRoute } from './Router'\r\n\r\nconst Component: React.FC<{\r\n  url: URL;\r\n  crumb: React.ReactNode;\r\n}> = ({ url, crumb, children }) => {\r\n  const preset = chainPresets.getByHostname(url.host)\r\n  const chainName = preset ? preset.name : 'Unknown Chain'\r\n  return (\r\n    <Grid container={true} spacing={2}>\r\n      <Grid item={true}>\r\n        <Box pt={2}>\r\n          <Breadcrumbs>\r\n            <Link to={homeRoute()}>Home</Link>\r\n            <Link to={chainRoute(url.host)}>{chainName}</Link>\r\n            <Typography>{crumb}</Typography>\r\n          </Breadcrumbs>\r\n        </Box>\r\n      </Grid>\r\n      <Grid\r\n        item={true}\r\n        xs={12}\r\n        container={true}\r\n        justify='space-between'\r\n        alignItems='center'\r\n      >\r\n        <Grid item={true}>\r\n          <ChainHeader url={url} preset={preset} />\r\n        </Grid>\r\n        <Grid item={true}>{children}</Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import {\r\n  Chip,\r\n  Hidden,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\nimport React from 'react'\r\nimport * as api from '../api'\r\nimport Link from './Link'\r\nimport { homeRoute } from './Router'\r\n\r\nconst TransactionRow: React.FC<{\r\n  url: URL;\r\n  transaction: api.Transaction;\r\n}> = ({ url, transaction }) => {\r\n  const id = api.getTransactionId(transaction)\r\n  const { trx } = transaction\r\n  const expiration = api.isDeferred(trx) ? 'N/A' : trx.transaction.expiration\r\n  const status = (\r\n    <Chip\r\n      size='small'\r\n      label={transaction.status}\r\n      avatar={transaction.status === 'executed' ? <DoneIcon /> : <></>}\r\n    />\r\n  )\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <Link to={homeRoute()}>\r\n          <Typography\r\n            noWrap={true}\r\n            style={{ maxWidth: 150 }}\r\n            variant='body2'\r\n            color='inherit'\r\n          >\r\n            {id}\r\n          </Typography>\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell>{expiration}</TableCell>\r\n      <Hidden smDown={true}>\r\n        <TableCell align='center'>{status}</TableCell>\r\n      </Hidden>\r\n      <Hidden xsDown={true}>\r\n        <TableCell align='right'>\r\n          {transaction.cpu_usage_us.toLocaleString()} μs\r\n        </TableCell>\r\n        <TableCell align='right'>\r\n          {transaction.net_usage_words.toLocaleString()} bytes\r\n        </TableCell>\r\n      </Hidden>\r\n      <Hidden smDown={true}>\r\n        <TableCell align='right'>\r\n          {api.getNumActionsInTransaction(transaction)}\r\n        </TableCell>\r\n      </Hidden>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nconst TransactionsTable: React.FC<{\r\n  url: URL;\r\n  transactions: api.Transaction[];\r\n}> = ({ url, transactions }) => {\r\n  const rows = transactions.map((transaction) => {\r\n    const key = api.getTransactionId(transaction)\r\n    return <TransactionRow key={key} url={url} transaction={transaction} />\r\n  })\r\n\r\n  return (\r\n    <Paper>\r\n      <Table stickyHeader={true}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Transaction ID</TableCell>\r\n            <TableCell>Expiration</TableCell>\r\n            <Hidden smDown={true}>\r\n              <TableCell align='center'>Status</TableCell>\r\n            </Hidden>\r\n            <Hidden xsDown={true}>\r\n              <TableCell align='right'>CPU Usage</TableCell>\r\n              <TableCell align='right'>Net Usage</TableCell>\r\n            </Hidden>\r\n            <Hidden smDown={true}>\r\n              <TableCell align='right'>Actions</TableCell>\r\n            </Hidden>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{rows}</TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default TransactionsTable\r\n","import { Typography } from '@material-ui/core'\r\nimport MarkdownIt from 'markdown-it'\r\nimport Mustache from 'mustache'\r\nimport React from 'react'\r\n\r\nconst md = new MarkdownIt()\r\n\r\nconst Component: React.FC<{ text: string; data?: any }> = ({ text, data }) => {\r\n  const rendered = Mustache.render(md.render(text), data)\r\n  return (\r\n    <Typography\r\n      component='div'\r\n      dangerouslySetInnerHTML={{ __html: rendered }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Hidden,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ReceiptIcon from '@material-ui/icons/Receipt'\r\nimport React from 'react'\r\nimport * as api from '../api'\r\nimport * as store from '../store'\r\nimport Link from './Link'\r\nimport RicardianText from './RicardianText'\r\nimport { accountRoute } from './Router'\r\n\r\nconst RicardianDialog: React.FC<{\r\n  url: URL;\r\n  action: api.ActionWithTransactionId;\r\n}> = ({ url, action }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const openDialog = React.useCallback(() => setOpen(true), [setOpen])\r\n  const closeDialog = React.useCallback(() => setOpen(false), [setOpen])\r\n  const selected = store.useSelector(store.getSelectedAccount)\r\n  const isSelected = selected && selected.name === action.account\r\n  const dispatch = store.useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    if (open && !isSelected) {\r\n      dispatch(store.createSelectAccount(url, action.account))\r\n    }\r\n  }, [url, action.account, isSelected, dispatch, open])\r\n\r\n  let content\r\n  if (!selected || !selected.abi) {\r\n    content = 'Loading'\r\n  } else if (api.isErr(selected.abi)) {\r\n    content = 'Error fetching ABI'\r\n  } else if (!selected.abi.data.abi) {\r\n    content = 'Not a smart contract'\r\n  } else {\r\n    const abi = selected.abi.data.abi\r\n    for (let i = abi.actions.length; i--; ) {\r\n      const actionAbi = abi.actions[i]\r\n      if (actionAbi.name === action.name) {\r\n        if (actionAbi.ricardian_contract) {\r\n          content = (\r\n            <RicardianText\r\n              text={actionAbi.ricardian_contract}\r\n              data={action.data}\r\n            />\r\n          )\r\n        } else {\r\n          content = 'No ricardian contract'\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title='View ricardian contract' placement='top-end'>\r\n        <IconButton size='small' onClick={openDialog}>\r\n          <ReceiptIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        onClose={closeDialog}\r\n        aria-labelledby='scroll-dialog-title'\r\n      >\r\n        <DialogTitle id='scroll-dialog-title'>\r\n          {action.account} / {action.name}\r\n        </DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText component='div'>{content}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDialog} color='primary'>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ActionRow: React.FC<{\r\n  url: URL;\r\n  action: api.ActionWithTransactionId;\r\n}> = ({ url, action }) => {\r\n  const authorization = action.authorization.map((auth) => {\r\n    const key = auth.actor + auth.permission\r\n    return (\r\n      <Typography noWrap={true} key={key} variant='body2'>\r\n        {auth.actor}\r\n        <Hidden smDown={true}> @ {auth.permission}</Hidden>\r\n      </Typography>\r\n    )\r\n  })\r\n  return (\r\n    <TableRow>\r\n      <Hidden xsDown={true}>\r\n        <TableCell>\r\n          <Typography\r\n            noWrap={true}\r\n            style={{ maxWidth: 100 }}\r\n            variant='body2'\r\n            color='inherit'\r\n          >\r\n            {action.id}\r\n          </Typography>\r\n        </TableCell>\r\n      </Hidden>\r\n      <TableCell>\r\n        <Link to={accountRoute(url.host, action.account)}>\r\n          {action.account}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Link to={accountRoute(url.host, action.account, action.name)}>\r\n          {action.name}\r\n        </Link>\r\n      </TableCell>\r\n      <Hidden xsDown={true}>\r\n        <TableCell>{authorization}</TableCell>\r\n      </Hidden>\r\n      <Hidden smDown={true}>\r\n        <TableCell>\r\n          <Typography noWrap={true} variant='body2' style={{ maxWidth: 150 }}>\r\n            {JSON.stringify(action.data)}\r\n          </Typography>\r\n        </TableCell>\r\n      </Hidden>\r\n      <TableCell>\r\n        <RicardianDialog url={url} action={action} />\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nconst ActionsTable: React.FC<{\r\n  url: URL;\r\n  actions: api.ActionWithTransactionId[];\r\n}> = ({ url, actions }) => {\r\n  const rows = actions.map((action) => {\r\n    const key = `${action.id}-${action.account}-${action.name}-${action.hex_data}`\r\n    return <ActionRow key={key} url={url} action={action} />\r\n  })\r\n\r\n  return (\r\n    <Paper>\r\n      <Table stickyHeader={true}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <Hidden xsDown={true}>\r\n              <TableCell>Transaction ID</TableCell>\r\n            </Hidden>\r\n            <TableCell>Contract</TableCell>\r\n            <TableCell>Action</TableCell>\r\n            <Hidden xsDown={true}>\r\n              <TableCell>Authorization</TableCell>\r\n            </Hidden>\r\n            <Hidden smDown={true}>\r\n              <TableCell>Data</TableCell>\r\n            </Hidden>\r\n            <TableCell />\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{rows}</TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ActionsTable\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","import {\r\n  Hidden,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport React from 'react'\r\nimport * as api from '../api'\r\nimport * as store from '../store'\r\nimport Link from './Link'\r\nimport { blockRoute } from './Router'\r\n\r\nconst BlockRow: React.FC<{ url: URL; block: store.Block }> = ({\r\n  block,\r\n  url,\r\n}) => {\r\n  const result = block.result\r\n  const route = blockRoute(url.host, block.num)\r\n  let producer\r\n  let actions\r\n  let timestamp\r\n  let id\r\n  if (result && api.isOk(result)) {\r\n    // The block is loaded, show the contents\r\n    const data = result.data\r\n    producer = data.producer\r\n    actions = api.getNumActionsInBlock(data).toLocaleString()\r\n    timestamp = data.timestamp\r\n    id = data.id\r\n  } else {\r\n    // The block is loading or failed\r\n    producer = <Skeleton />\r\n    actions = <Skeleton />\r\n    timestamp = <Skeleton />\r\n    id = <Skeleton />\r\n  }\r\n  return (\r\n    <TableRow>\r\n      <TableCell component='th' scope='row'>\r\n        <Link to={route}>{block.num.toLocaleString()}</Link>\r\n      </TableCell>\r\n      <Hidden smDown={true}>\r\n        <TableCell align='right'>\r\n          <Link to={route}>\r\n            <Typography variant='body2' noWrap={true} style={{ maxWidth: 250 }}>\r\n              {id}\r\n            </Typography>\r\n          </Link>\r\n        </TableCell>\r\n      </Hidden>\r\n      <TableCell align='center'>{producer}</TableCell>\r\n      <TableCell align='right'>{actions}</TableCell>\r\n      <Hidden xsDown={true}>\r\n        <TableCell align='right'>{timestamp}</TableCell>\r\n      </Hidden>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nconst BlocksTable: React.FC<{ url: URL; blocks: store.Block[] }> = ({\r\n  url,\r\n  blocks,\r\n}) => {\r\n  const rows = blocks.map((block) => (\r\n    <BlockRow key={block.num} block={block} url={url} />\r\n  ))\r\n  return (\r\n    <Paper>\r\n      <Table stickyHeader={true}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Block #</TableCell>\r\n            <Hidden smDown={true}>\r\n              <TableCell>Block Id</TableCell>\r\n            </Hidden>\r\n            <TableCell align='center'>Producer</TableCell>\r\n            <TableCell align='right'>Actions</TableCell>\r\n            <Hidden xsDown={true}>\r\n              <TableCell align='right'>Timestamp</TableCell>\r\n            </Hidden>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{rows}</TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default BlocksTable\r\n","import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Hidden,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport React, { useCallback, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as api from '../api'\r\nimport * as store from '../store'\r\nimport ActionsTable from './ActionsTable'\r\nimport BlocksTable from './BlocksTable'\r\nimport ErrorPage from './ErrorPage'\r\nimport PageBody from './PageBody'\r\nimport PageHeader from './PageHeader'\r\nimport PageWrapper from './PageWrapper'\r\nimport { ChainTab } from './Router'\r\nimport TransactionsTable from './TransactionsTable'\r\n\r\n// The button that starts/stops auto-playing blocks\r\nconst AutoplayButton: React.FC<{ url: URL }> = ({ url }) => {\r\n  const dispatch = store.useDispatch()\r\n  const isPlaying = store.useSelector(store.getIsPlaying)\r\n  const onClick = useCallback(() => {\r\n    if (isPlaying) {\r\n      dispatch(store.createPauseBlocks())\r\n    } else {\r\n      dispatch(store.createPlayBlocks(url))\r\n    }\r\n  }, [dispatch, url, isPlaying])\r\n  const icon = isPlaying ? <PauseIcon /> : <PlayArrowIcon />\r\n  const text = isPlaying ? 'Pause' : 'Play'\r\n  return (\r\n    <Button\r\n      variant='contained'\r\n      endIcon={icon}\r\n      onClick={onClick}\r\n      color='primary'\r\n      size='large'\r\n    >\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\n// Max number of rows on actions/transactions tabs\r\nconst maxNonBlockRows = 20\r\n\r\n// Gets desired # of transactions and returns early\r\nfunction getTransactions(chain: store.ChainState): api.Transaction[] {\r\n  let transactions: api.Transaction[] = []\r\n  for (let i = 0, l = chain.latestBlocks.length; i < l; i++) {\r\n    const block = chain.latestBlocks[i]\r\n    if (block && block.result && api.isOk(block.result)) {\r\n      const budget = maxNonBlockRows - transactions.length\r\n      transactions = transactions.concat(\r\n        block.result.data.transactions.slice(0, budget),\r\n      )\r\n\r\n      if (transactions.length >= maxNonBlockRows) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return transactions\r\n}\r\n\r\n// Gets desired # of actions and returns early\r\nfunction getActions(chain: store.ChainState): api.ActionWithTransactionId[] {\r\n  let actions: api.ActionWithTransactionId[] = []\r\n  for (let i = 0, l = chain.latestBlocks.length; i < l; i++) {\r\n    const block = chain.latestBlocks[i]\r\n    if (block && block.result && api.isOk(block.result)) {\r\n      const data = block.result.data\r\n      for (let x = 0, y = data.transactions.length; x < y; x++) {\r\n        const transaction = data.transactions[x]\r\n        const budget = maxNonBlockRows - actions.length\r\n        actions = actions.concat(\r\n          api.getActionsInTransaction(transaction).slice(0, budget),\r\n        )\r\n\r\n        if (actions.length >= maxNonBlockRows) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return actions\r\n}\r\n\r\nconst Table: React.FC<{ url: URL; tab?: ChainTab }> = ({ url, tab }) => {\r\n  const state = store.useSelector(store.getChainState)\r\n\r\n  if (state) {\r\n    if (api.isOk(state)) {\r\n      switch (tab) {\r\n      case ChainTab.Transactions:\r\n        const transactions = getTransactions(state.data)\r\n        return <TransactionsTable url={url} transactions={transactions} />\r\n      case ChainTab.Actions:\r\n        const actions = getActions(state.data)\r\n        return <ActionsTable url={url} actions={actions} />\r\n      case ChainTab.Blocks:\r\n      default:\r\n        return <BlocksTable url={url} blocks={state.data.latestBlocks} />\r\n      }\r\n    } else {\r\n      return (\r\n        <Grid item={true} xs={12}>\r\n          <Paper>\r\n            <Box p={10}>\r\n              <Typography variant='body2' color='error' align='center'>\r\n                Error fetching chain info\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      )\r\n    }\r\n  } else {\r\n    return <>Loading</>\r\n  }\r\n}\r\n\r\nconst Contents: React.FC<{ url: URL }> = ({ url }) => {\r\n  const [tab, setTab] = React.useState(ChainTab.Blocks)\r\n  const handleChange = useCallback(\r\n    (event: React.ChangeEvent<{}>, newTab: ChainTab) => {\r\n      setTab(newTab)\r\n    },\r\n    [setTab],\r\n  )\r\n  return (\r\n    <>\r\n      <Grid item={true} xs={12}>\r\n        <Paper>\r\n          <Tabs value={tab} onChange={handleChange} variant='fullWidth'>\r\n            <Tab label='Blocks' />\r\n            <Tab label='Actions' />\r\n            <Tab label='Transactions' />\r\n          </Tabs>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item={true} xs={12}>\r\n        <Table url={url} tab={tab} />\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Component: React.FC<RouteComponentProps<{ host: string }>> = ({\r\n  match,\r\n}) => {\r\n  // Try to parse the URL\r\n  let url: URL | void\r\n  try {\r\n    url = new URL(`https://${match.params.host}`)\r\n  } catch (_) {\r\n    // Ignore for now, show error message later\r\n  }\r\n\r\n  // Start auto-playing blocks\r\n  const dispatch = store.useDispatch()\r\n  useEffect(() => {\r\n    if (url) {\r\n      dispatch(store.createPlayBlocks(url))\r\n    }\r\n    return () => {\r\n      dispatch(store.createPauseBlocks())\r\n    }\r\n  }, [dispatch, url])\r\n\r\n  // Return early with errors\r\n  if (!url) {\r\n    return <ErrorPage message={'Invalid Host'} />\r\n  }\r\n\r\n  const crumb = (\r\n    <>\r\n      Live <Hidden xsDown={true}>Transactions</Hidden>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <PageHeader url={url} crumb={crumb}>\r\n        <AutoplayButton url={url} />\r\n      </PageHeader>\r\n      <PageBody>\r\n        <Contents url={url} />\r\n      </PageBody>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Component\r\n"],"sourceRoot":""}